{"mappings":"wfAK6BA,EAAdC,EAAAC,GAAMC,MAAK,UAAgBC,MAACA,EAAKC,WAAEA,EAAUC,aAAEA,aA4J1DC,MACD,CACAC,MAAA,MACsFC,QAAA,oBAGvFC,kDACaC,EAAAC,UAAD,iLACZD,EAAAE,GAAY,qBAEZF,EAAAG,UAAiB,eAEjBH,EAAAI,iBAAwB,QAAkBR,GACzCI,SAxKFT,EAAAc,WAAS,KAEY,OAAhBZ,EAAMI,OACTS,SAASC,eAAe,SAASC,UAAUC,OAAO,UAClDH,SAASC,eAAe,cAAcG,UAAY,GAC7B,SAAjBjB,EAAMK,yBAuDHQ,SAAcC,eAAG,cACrBI,EAAML,SAAUM,cAAS,OAC7BD,EAAqBV,UAAA,uGAErBU,EAAAD,UAAU,uYA6BV,IAAAG,EAASP,SAAaM,cAAA,OACtBC,EAAAZ,UAAiB,yEACjBY,EAAAH,UAAkB,2DACgHI,OAClID,EAAAE,QAAiBC,oBA0EhBC,QACAC,EAAY,CACZ,OAED,MAEA,MACwB,SACvB,OAED,QACC,yBAA6C,SACpB,cACJ,aAC8C,aAChB,eACnD,aAED,aACC,eACA,iCAQS,IAAIC,8BACZH,KACa,IAAAI,yBAEe,UAAkBC,gBAAC,IAE9CC,YAAwB,IACNC,gBAAP,oCAC0B,oBAASnB,iBAAA,SAAA,OAAGoB,kCAE3B,sBAAKpB,iBAAA,SAAA,OAA0CoB,kBAGtEC,IAAC,iCACeC,aAAW,eAE3BC,YAAA,WAEgDjC,EAAA,CAC6BG,MAAA,MAC9EC,QAAA,cAMC8B,SAAyD,SAAAC,SACvDC,EAAmBD,EAAAE,QAAAC,OAAA,MACrBC,EAAAJ,EAASE,QAAKD,GAAA,GAAAI,WAAAC,OAAAC,MAAA,KAAAC,KAAAC,GAAAA,EAAAC,OAAA,GAAAC,cAAAF,EAAAG,MAAA,gCACV,IAAAC,EAAA,EAAUA,EAAoET,EAAAD,OAAAU,IAACC,QAAelB,IAAAQ,EAAAS,IAEnG,eAAA,QAAAT,EAAAS,IAAA,OAAAT,EAAAS,mDAGF7C,MAAA,mMAtIK+C,IAGJ,IAAA5C,EAAQD,IACR8C,EAAAC,OAAQnC,GACRkC,EAAAC,OAAQjC,GACRgC,EAAKC,OAAO9C,GAnGV+C,GAC2B,QAAjBtD,EAAMK,kBAqGVkD,GACR,IAACC,EAAAC,OAAAC,SAAAC,OAAAF,OAAAC,SAAAE,SAAA,IAAAL,YAEMM,UAAUC,UAAON,GACvB,IAA+BJ,EAAAvC,SAAAC,eAAA,cAC/BiD,EAAAlD,SAAAM,cAAA,OACD4C,EAAAvD,UAAA,iDAEgBK,SAACM,cAAA,OACjB6C,EAAAxD,UAAY,0DAACS,UAAY,4iBAmBrBgD,EAAKpD,SAAAM,cAAA,WACF+C,KAAA,SACCC,UAAA,IACD3D,UAAA,oIACE4D,MAAAZ,MACFjD,EAAED,MACAS,UAAAsD,IAAA,UACKhB,OAAAW,KACDX,OAAAY,KACAZ,OAAA9C,KACE8C,OAAAU,YACFjD,eAAA,oBAAAH,iBAAA,SAAA,WACF8C,OAAEC,SAAAY,KAAAd,cAEE1C,eAAA,sBAAAH,iBAAA,SAAA,WACF8C,OAAFC,SAAAY,KAAAd,KA/ITe,CAAWvE,EAAMuD,MAGlB1C,SAASC,eAAe,SAASC,UAAUsD,IAAI,2ZCjBlDG,EAAAC,QAAc,IAAAC,IAAuBC,EAAA,SAAAC,QAA6C,SAAOC,OAAAC,KAAAC,KAAGC","sources":["components/modal.js","node_modules/@parcel/runtime-js/lib/runtime-b2f11692553916d9.js"],"sourcesContent":["import React, { useEffect } from \"react\"\r\nimport * as microPNG from \"../files/micro.png\"\r\n\r\n//* команда отмена = удалить последнее\r\n\r\nexport default React.memo(function Modal({ modal, closeModal, addOneToggle }) {\r\n\tuseEffect(() => {\r\n\t\t//console.log(document.getElementById(\"modal\"))\r\n\t\tif (modal.state === \"on\") {\r\n\t\t\tdocument.getElementById(\"modal\").classList.remove(\"hidden\")\r\n\t\t\tdocument.getElementById(\"modal-main\").innerHTML = \"\"\r\n\t\t\tif (modal.content == \"voice\") {\r\n\t\t\t\trenderVoice()\r\n\t\t\t} else if (modal.content == \"copy\") {\r\n\t\t\t\trenderCopy(modal.val)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdocument.getElementById(\"modal\").classList.add(\"hidden\")\r\n\t\t}\r\n\t})\r\n\r\n\t/* voice\r\n\t<div id=\"modal-main\">\r\n  \t\t<div class=\"voice-info\">Нажмите на кнопку и начните говорить\r\n\t\t\t<br>Команды:<br>\r\n\t\t\t<ul class=\"list-disc w-2/3 m-3\">\r\n\t\t\t<li>\"Название продукта\" - добавить один продукт</li>\r\n\t\t\t<li>\"Название продукта\" и \"цифра количества\" - добавить несколько.<br> Пример: \"Банан три\"</li>\r\n\t\t\t<li>\"Конец\", \"Всё\" (или закрытие окна) - закончить ввод</li>\r\n\t\t\t</ul></div>\r\n  \t\t<div class=\"voice-micro\">\r\n\t<img class=\"w-19\" src=\"${microPNG}\"/\r\n  \t\t</div>\r\n\r\n\t\t  {button}\r\n  \t</div>\r\n*/\r\n\tfunction renderVoice() {\r\n\t\tlet main = document.getElementById(\"modal-main\")\r\n\r\n\t\tlet info = document.createElement(\"div\")\r\n\t\tinfo.className =\r\n\t\t\t\"w-full md:w-2/3 h-auto mx-auto mt-10 text-center shadow-md flex flex-col justify-center items-center\"\r\n\t\tinfo.innerHTML = `Нажмите на кнопку и начните говорить\r\n\t\t\t<p>Команды:<br>\r\n\t\t\t<ul class=\"list-disc w-10/12 md:w-2/3 m-3\">\r\n\t\t\t<li>\"Название продукта\" - добавить один продукт</li>\r\n\t\t\t<li>\"Название продукта\" + \"цифра количества\" - добавить несколько<br> Пример: \"Банан три\"</li>\r\n\t\t\t<li>\"Отмена\" - убрать последний элемент</li>\r\n\t\t\t<li>\"Конец\" или \"Всё\" - закончить ввод</li>\r\n\t\t\t</ul>`\r\n\r\n\t\tlet micro = document.createElement(\"div\")\r\n\t\tmicro.className = \"w-max h-max mx-auto my-8 px-4 py-4 border rounded-full hover:shadow-lg\"\r\n\t\tmicro.innerHTML = `<img class=\"w-19\" alt=\"кнопка включения микрофона\" src=\"${microPNG}\"/>`\r\n\t\tmicro.onclick = (e) => {\r\n\t\t\tvoice()\r\n\t\t}\r\n\r\n\t\tlet button = createButton()\r\n\r\n\t\tmain.append(info)\r\n\t\tmain.append(micro)\r\n\t\tmain.append(button)\r\n\t}\r\n\r\n\tfunction renderCopy(val) {\r\n\t\tlet newUrl = window.location.origin + window.location.pathname + \"?\" + val\r\n\t\t//console.log(newUrl)\r\n\r\n\t\tnavigator.clipboard.writeText(newUrl)\r\n\r\n\t\tlet main = document.getElementById(\"modal-main\")\r\n\r\n\t\tlet wrapper = document.createElement(\"div\")\r\n\t\twrapper.className = \"flex flex-col items-center w-full h-full\"\r\n\r\n\t\tlet header = document.createElement(\"div\")\r\n\t\theader.className = \"flex flex-col justify-center items-center w-full m-10\"\r\n\t\theader.innerHTML = `\r\n\t\t<div class=\"mx-auto flex items-center justify-center h-14 w-14 rounded-full bg-green-100\">\r\n\t\t\t<svg\r\n\t\t\tclass=\"h-9 w-9 text-green-600\"\r\n\t\t\tfill=\"none\"\r\n\t\t\tstroke=\"currentColor\"\r\n\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\td=\"M5 13l4 4L19 7\"\r\n\t\t\t\t></path>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t\t<h3 class=\"text-lg leading-6 font-medium text-gray-900 mt-4\">Ссылка скопирована!</h3>`\r\n\r\n\t\tlet copyLine = document.createElement(\"input\")\r\n\t\tcopyLine.type = \"text\"\r\n\t\tcopyLine.disabled = true\r\n\t\tcopyLine.className =\r\n\t\t\t\"w-11/12 md:w-1/2 h-max mt-2 mb-6 px-4 py-2 border rounded-lg text-gray-700 focus:outline-none focus:border-green-500 select-all\"\r\n\t\tcopyLine.value = newUrl\r\n\r\n\t\tlet button = createButton()\r\n\t\tbutton.classList.add(\"mt-5\")\r\n\r\n\t\twrapper.append(header)\r\n\t\twrapper.append(copyLine)\r\n\t\twrapper.append(button)\r\n\t\tmain.append(wrapper)\r\n\r\n\t\tdocument.getElementById(\"modal-background\").addEventListener(\"click\", function () {\r\n\t\t\twindow.location.href = newUrl\r\n\t\t})\r\n\t\tdocument.getElementById(\"close-modal-button\").addEventListener(\"click\", function () {\r\n\t\t\twindow.location.href = newUrl\r\n\t\t\t//window.onload = () => close()\r\n\t\t})\r\n\t}\r\n\r\n\tfunction close() {\r\n\t\tcloseModal({ state: \"off\", content: \"closed\" })\r\n\t}\r\n\r\n\tfunction createButton() {\r\n\t\tlet button = document.createElement(\"button\")\r\n\t\tbutton.className =\r\n\t\t\t\"px-6 py-4 bg-green-500 text-white text-base font-medium rounded-md mx-auto mb-10 w-max h-max shadow-sm hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-300\"\r\n\t\tbutton.id = \"close-modal-button\"\r\n\t\tbutton.innerText = \"Закрыть окно\"\r\n\t\tbutton.addEventListener(\"click\", close)\r\n\t\treturn button\r\n\t}\r\n\r\n\tfunction voice() {\r\n\t\tlet recognition\r\n\t\tconst numsAlp = [\r\n\t\t\t\"Один\",\r\n\t\t\t\"Два\",\r\n\t\t\t\"Три\",\r\n\t\t\t\"Четыре\",\r\n\t\t\t\"Пять\",\r\n\t\t\t\"Шесть\",\r\n\t\t\t\"Семь\",\r\n\t\t\t\"Восемь\",\r\n\t\t\t\"Девять\",\r\n\t\t\t\"Десять\",\r\n\t\t\t\"Одиннадцать\",\r\n\t\t\t\"Двенадцать\",\r\n\t\t\t\"Тринадцать\",\r\n\t\t\t\"Четырнадцать\",\r\n\t\t\t\"Пятнадцать\",\r\n\t\t\t\"Cемнадцать\",\r\n\t\t\t\"Восемнадцать\",\r\n\t\t\t\"Девятнадцать\",\r\n\t\t\t\"Двадцать\",\r\n\t\t]\r\n\t\ttry {\r\n\t\t\trecognition = new webkitSpeechRecognition()\r\n\t\t} catch (e) {\r\n\t\t\trecognition = new SpeechRecognition()\r\n\t\t}\r\n\t\t//const SpeechGrammarList = window.SpeechGrammarList || window.webkitSpeechGrammarList;\r\n\t\t//const SpeechRecognitionEvent = window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent;\r\n\t\trecognition.lang = \"ru-RU\"\r\n\t\trecognition.interimResults = false //промежуточные\r\n\t\trecognition.continuous = true\r\n\t\trecognition.maxAlternatives = 1\r\n\r\n\t\trecognition.start()\r\n\r\n\t\tdocument.getElementById(\"modal-background\").addEventListener(\"click\", () => {\r\n\t\t\trecognition.stop()\r\n\t\t})\r\n\t\tdocument.getElementById(\"close-modal-button\").addEventListener(\"click\", () => {\r\n\t\t\t//button in modal\r\n\t\t\trecognition.stop()\r\n\t\t})\r\n\r\n\t\tconsole.log(\"Ready to receive a command.\")\r\n\r\n\t\trecognition.onaudiostart = function () {\r\n\t\t\t//hidden show something\r\n\t\t}\r\n\r\n\t\trecognition.onspeechend = function () {\r\n\t\t\tcloseModal({ state: \"off\", content: \"closed\" })\r\n\t\t\t//конец по причине тишины\r\n\t\t\t//recognition.start()\r\n\t\t\t//microphoneWrapper.style.visibility = 'visible'; hidden show again\r\n\t\t\t//audioRecordAnimation.style.visibility = 'hidden';\r\n\t\t}\r\n\r\n\t\trecognition.onresult = function (event) {\r\n\t\t\tconst last = event.results.length - 1\r\n\t\t\tlet res = event.results[last][0].transcript\r\n\t\t\t\t.trim()\r\n\t\t\t\t.split(\" \")\r\n\t\t\t\t.map((el) => el.charAt(0).toUpperCase() + el.slice(1))\r\n\r\n\t\t\tconsole.log(\"res: \", res)\r\n\r\n\t\t\tfor (let i = 0; i < res.length; i++) {\r\n\t\t\t\tconsole.log(res[i])\r\n\t\t\t\tif (res[i] == \"Конец\" || res[i] == \"Стоп\" || res[i] == \"Всё\") {\r\n\t\t\t\t\trecognition.stop()\r\n\t\t\t\t\tconsole.log(\"recognition stopped\")\r\n\t\t\t\t\tcloseModal({ state: \"off\", content: \"closed\" })\r\n\t\t\t\t} else if (numsAlp.includes(res[i + 1]) || Number.isInteger(+res[i + 1])) {\r\n\t\t\t\t\t//если следующее - колво\r\n\t\t\t\t\tif (Number.isInteger(+res[i + 1])) {\r\n\t\t\t\t\t\taddOneToggle({ item: res[i], colv: +res[i + 1] })\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\taddOneToggle({ item: res[i], colv: numsAlp.indexOf(res[i + 1]) + 1 })\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddOneToggle({ item: res[i], colv: 1 })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//closeModal({ state: \"off\", content: \"closed\" })\r\n\t\t\t//точность надо? console.log('Confidence: ' + event.results[0][0].confidence);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"absolute flex justify-center hidden inset-0 h-full w-full z-20 \" id=\"modal\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"fixed bg-gray-600 bg-opacity-50 h-full w-full\"\r\n\t\t\t\tid=\"modal-background\"\r\n\t\t\t\tonClick={close}></div>\r\n\t\t\t<div className=\"fixed flex flex-col bg-white w-10/12 md:w-6/12 h-max my-16 md:my-2\" id=\"modal-main\">\r\n\t\t\t\thello from modal!\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hhQWC\")).toString();"],"names":["$9aa74651da79a419$export$2e2bcd8739ae039","$parcel$interopDefault","$3tv95","memo","modal","closeModal","addOneToggle","close","state","content","createButton","button","className","id","innerText","addEventListener","useEffect","document","getElementById","classList","remove","innerHTML","info","createElement","micro","$3YWD6","onclick","e","recognition","numsAlp","webkitSpeechRecognition","SpeechRecognition","interimResults","continuous","maxAlternatives","stop","log","onaudiostart","onspeechend","onresult","event","last","results","length","res","transcript","trim","split","map","el","charAt","toUpperCase","slice","i","console","voice","main","append","renderVoice","val","newUrl","window","location","origin","pathname","clipboard","writeText","wrapper","header","copyLine","type","disabled","value","add","href","renderCopy","module","exports","URL","parcelRequire","resolve","import","meta","url","toString"],"version":3,"file":"modal.2c62a008.js.map"}